# GitHub Actions Workflow
# Move this file to .github/workflows/deploy.yml to enable automatic deployment

name: Deploy to Cloudflare Workers

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configure Git defaults
        run: |
          git config --global init.defaultBranch main
          git config --global advice.defaultBranchName false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Type check
        run: npm run build
        
      - name: Extract Server ID
        id: server_info
        run: |
          # Extract server ID from repo name (format: mcp-{name}-{uuid})
          REPO_NAME="${{ github.event.repository.name }}"
          SERVER_ID=$(echo "$REPO_NAME" | grep -oE '[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$')
          echo "server_id=$SERVER_ID" >> $GITHUB_OUTPUT
          
          # Get version from package.json
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Deploy to Cloudflare Workers
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          
      - name: Notify Deployment Success
        if: success()
        run: |
          # Extract server ID and generate token
          SERVER_ID="${{ steps.server_info.outputs.server_id }}"
          # Simple token: first 16 chars of sha256(server_id:secret)
          WEBHOOK_TOKEN=$(echo -n "${SERVER_ID}:mcpcreator-webhook-2024" | sha256sum | cut -c1-16)
          
          # Retry logic for webhook
          for i in {1..3}; do
            response=$(curl -X POST "${{ secrets.MCPCREATOR_WEBHOOK_URL }}" \
              -H "Content-Type: application/json" \
              -H "x-webhook-token: $WEBHOOK_TOKEN" \
              -d '{
                "server_id": "${{ steps.server_info.outputs.server_id }}",
                "status": "success",
                "version": "${{ steps.server_info.outputs.version }}",
                "workflow_run_id": "${{ github.run_id }}",
                "workflow_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "deployed_at": "'"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"'"
              }' \
              -w "\n%{http_code}" \
              -s \
              -o /tmp/webhook_response.txt)
            
            http_code=$(echo "$response" | tail -n1)
            
            if [ "$http_code" = "200" ]; then
              echo "✅ Webhook notification sent successfully"
              break
            else
              echo "⚠️ Webhook attempt $i failed with status $http_code"
              if [ $i -lt 3 ]; then
                echo "Retrying in 5 seconds..."
                sleep 5
              fi
            fi
          done
          
      - name: Notify Deployment Failure
        if: failure()
        run: |
          # Generate webhook token
          SERVER_ID="${{ steps.server_info.outputs.server_id }}"
          WEBHOOK_TOKEN=$(echo -n "${SERVER_ID}:mcpcreator-webhook-2024" | sha256sum | cut -c1-16)
          
          # Retry logic for failure webhook
          for i in {1..3}; do
            response=$(curl -X POST "${{ secrets.MCPCREATOR_WEBHOOK_URL }}" \
              -H "Content-Type: application/json" \
              -H "x-webhook-token: $WEBHOOK_TOKEN" \
              -d '{
                "server_id": "${{ steps.server_info.outputs.server_id }}",
                "status": "failure",
                "version": "${{ steps.server_info.outputs.version }}",
                "workflow_run_id": "${{ github.run_id }}",
                "workflow_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "error_message": "Deployment failed. Check workflow logs for details.",
                "deployed_at": "'"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"'"
              }' \
              -w "\n%{http_code}" \
              -s \
              -o /tmp/webhook_response.txt)
            
            http_code=$(echo "$response" | tail -n1)
            
            if [ "$http_code" = "200" ]; then
              echo "✅ Failure notification sent"
              break
            else
              echo "⚠️ Webhook attempt $i failed with status $http_code"
              if [ $i -lt 3 ]; then
                sleep 5
              fi
            fi
          done
